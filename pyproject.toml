# ----------------------------------------
# üì¶ Project Metadata
# ----------------------------------------
[project]
name = "mycli"
description = "A modern Python CLI project template using Typer."
authors = [{ name = "Yeongseon Choe", email = "yeongseon.choe@gmail.com" }]
readme = "README.md"
requires-python = ">=3.9"
license = { text = "MIT" }
keywords = ["cli", "template", "typer", "python"]
dynamic = ["version"]

# Runtime dependencies
dependencies = [
    "typer[all]",
    "rich",
    "requests",
    "packaging"
]

[project.optional-dependencies]
dev = [
    "black",
    "build",
    "coverage",
    "hatch",
    "mkdocs",
    "mkdocs-material",
    "mkdocstrings[python]",
    "mypy",
    "pre-commit",
    "pytest",
    "ruff",
    "types-requests",
    "tox"
]

[project.scripts]
mycli = "mycli.cli:app"

# ----------------------------------------
# üî® Build System
# ----------------------------------------
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# ----------------------------------------
# üèó Hatch Build Configuration
# ----------------------------------------
[tool.hatch.build]
sources = ["src"]

[tool.hatch.build.targets.wheel]
packages = ["src/mycli"]

# ----------------------------------------
# üîñ Version Management
# ----------------------------------------
[tool.hatch.version]
path = "src/mycli/__init__.py"

# ----------------------------------------
# üß™ Hatch Environments
# ----------------------------------------
[tool.hatch.envs.default]
features = ["dev"]

[tool.hatch.envs.default.scripts]
lint = ["ruff check src tests", "black --check src tests"]
typecheck = "mypy src"
test = "pytest"
cov = "pytest --cov=src/mycli --cov-report=html --cov-report=term"
check = ["lint", "typecheck", "test"]
check-all = ["check", "cov"]
format = ["ruff check --fix src tests", "black src tests"]

[tool.hatch.envs.test]
dependencies = ["pytest", "coverage"]
scripts.test = "pytest -v tests"

[tool.hatch.envs.lint]
dependencies = ["ruff", "black", "mypy"]
scripts.lint = [
    "ruff check src tests",
    "mypy src",
    "black --check src tests"
]
scripts.format = [
    "ruff check --fix src tests",
    "black src tests"
]

[tool.hatch.envs.docs]
dependencies = ["mkdocs", "mkdocs-material"]
scripts.docs = "mkdocs serve"

[tool.hatch.envs.ci]
dependencies = ["pytest", "coverage"]
scripts.test = [
    "pytest --cov=src/mycli --cov-report=term --cov-report=xml"
]

# ----------------------------------------
# ‚öô Tool Configurations
# ----------------------------------------
[tool.black]
line-length = 100
target-version = ["py39"]

[tool.ruff]
line-length = 100
target-version = "py39"
exclude = [".venv", "build", "dist", "__pycache__"]
src = ["src"]
fix = true

[tool.ruff.lint]
select = ["E", "F", "I", "B"]

[tool.ruff.lint.isort]
known-first-party = ["mycli"]

[tool.mypy]
python_version = "3.9"
strict = true
files = ["src"]

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]

[tool.coverage.run]
branch = true
source = ["src/mycli"]

[tool.coverage.report]
show_missing = true
skip_covered = true

[tool.coverage.html]
directory = "htmlcov"

# ----------------------------------------
# üì¶ Metadata (optional but recommended)
# ----------------------------------------
[tool.hatch.metadata]
allow-direct-references = true
